// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DropDownInput /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropDownInput
    onChange={[MockFunction]}
    options={
      Array [
        Object {
          "id": 1,
          "name": "pro1",
        },
        Object {
          "id": 2,
          "name": "pro2",
        },
      ]
    }
    values={
      Object {
        "category_id": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <select
        name="category_id"
        onChange={[MockFunction]}
        value={0}
      >
        <option
          value="0"
        >
          Select category:
        </option>
        <option
          value={1}
        >
          pro1
        </option>
        <option
          value={2}
        >
          pro2
        </option>
      </select>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value="0"
          >
            Select category:
          </option>,
          Array [
            <option
              value={1}
            >
              pro1
            </option>,
            <option
              value={2}
            >
              pro2
            </option>,
          ],
        ],
        "name": "category_id",
        "onChange": [MockFunction],
        "value": 0,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Select category:",
            "value": "0",
          },
          "ref": null,
          "rendered": "Select category:",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": "pro1",
            "value": 1,
          },
          "ref": null,
          "rendered": "pro1",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": "pro2",
            "value": 2,
          },
          "ref": null,
          "rendered": "pro2",
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <select
          name="category_id"
          onChange={[MockFunction]}
          value={0}
        >
          <option
            value="0"
          >
            Select category:
          </option>
          <option
            value={1}
          >
            pro1
          </option>
          <option
            value={2}
          >
            pro2
          </option>
        </select>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value="0"
            >
              Select category:
            </option>,
            Array [
              <option
                value={1}
              >
                pro1
              </option>,
              <option
                value={2}
              >
                pro2
              </option>,
            ],
          ],
          "name": "category_id",
          "onChange": [MockFunction],
          "value": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Select category:",
              "value": "0",
            },
            "ref": null,
            "rendered": "Select category:",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": "pro1",
              "value": 1,
            },
            "ref": null,
            "rendered": "pro1",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": "pro2",
              "value": 2,
            },
            "ref": null,
            "rendered": "pro2",
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
